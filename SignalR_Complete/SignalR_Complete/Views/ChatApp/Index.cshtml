@*@model ChatViewModel

    <h1>Private Chat</h1>
    <h3>@User.Identity.Name</h3>

    <div id="chatContainer">
        <div id="chatMessages">
            @foreach (var message in Model.Messages)
            {
                <p>@message.Sender.UserName: @message.Message</p>
            }
        </div>
        <div id="chatInput">
            <input type="text" id="messageInput" />
            <button type="button" id="sendButton">Send</button>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>

    <script>
        $(document).ready(function() {
            var connection = new signalR.HubConnectionBuilder().withUrl('/chatHub').build();

            connection.on('ReceiveMessage', function(senderId, message, timestamp, isRead) {
                var senderUserName = '@Model.Participant.UserName';
                if (senderId === '@Model.Participant.Id') {
                    senderUserName = '@Model.User.UserName';
                }
                var formattedTimestamp = new Date(timestamp).toLocaleTimeString();
                var messageContent = '<p>' + senderUserName + ': ' + message + ' (' + formattedTimestamp + ')' + '</p>';
                $('#chatMessages').append(messageContent);

                if (!isRead) {
                    connection.invoke('MarkPrivateMessageAsRead', senderId);
                }
            });

            connection.start().catch(function(err) {
                return console.error(err.toString());
            });

            $('#sendButton').on('click', function () {
                var message = $('#messageInput').val();
                connection.invoke('SendMessage', '@Model.Participant.Id', message).catch(function(err) {
                    return console.error(err.toString());
                });

                $('#messageInput').val('');
            });
        });
    </script>
*@


@model ChatViewModel

<link href="~/css/message.css" rel="stylesheet" />

<h1>Conversation with @ViewBag.ReceiverName</h1>

<div id="container">
    @foreach (var message in Model.Messages)
    {
        var messageClass = message.IsSender ? "message-orange" : "message-blue";
        var messageTimeSend = message.IsSender ? "message-timestamp-right" : "message-timestamp-left";
        <div class="message @messageClass" data-message-id="@message.Id">
            <small>
                @if (message.SenderId == Model.Recever.Id)
                {
                    @Model.Recever.UserName
                }
                else
                {
                    @Model.User.UserName

                }
            </small>
            <p class="message-content mt-2" style="font-size:18px;font-weight:bold">
                @message.Message
            </p>
            @if (message.SenderId == Model.User.Id)
            {
                <div class="row mt-2">
                    <div class="col-9">
                        <small>@message.Timestamp</small>
                    </div>
                    <div class="col-3">
                        <button class="bg-transparent border-0 delete-button" data-id="@message.Id">
                            <i class="fa-solid fa-trash"></i>
                        </button>
                    </div>
                </div>
            }
            else
            {
                <div class="row mt-2">
                    <div class="col-9">
                        <small>@message.Timestamp</small>
                    </div>
                </div>
            }
        </div>
    }
</div>


<form id="sendMessageForm">
    <div class="row">
        <div class="col-10">
            <input type="hidden" id="receiverId" value="@ViewBag.ReceiverId" />
            <textarea rows="2" class="form-control border-primary" id="messageInput"></textarea>
        </div>
        <div class="col-2">
            <button type="button" class="btn border-primary h-100" style="max-height: 50px; min-width: 45px;margin-top:2px">
                <i class="fa-solid fa-file-image"></i>
            </button>
            <button type="submit" class="btn border-primary h-100" style="max-height: 50px; min-width: 45px; margin-top: 2px">
                <i class="fa-solid fa-paper-plane" style="font-size:22px"></i>
            </button>
        </div>
    </div>
</form>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    @*<script src="~/lib/jquery/dist/jquery.js"></script>*@
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>

    <script>

        //_______________________  SignalR Connection _________________________
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub", {
                skipNegotiation: true,
                transport: signalR.HttpTransportType.WebSockets
            })
            .build();

        //____ Testing Connection _____
        connection.start()
            .then(function () {
                console.log("Connection started.");
            })
            .catch(function (error) {
                console.error("Error starting connection: " + error);
            });


        //_______________________  Send Message _________________________
        $("#sendMessageForm").on("submit", function (event) {
            event.preventDefault();
            var receiverId = $("#receiverId").val();
            var content = $("#messageInput").val();
            connection.invoke("SendMessage", receiverId, content).catch(function (err) {
                return console.error(err.toString());
            });
            $("#messageInput").val("");
        });

        @*connection.on("ReceiveMessage", function (senderName,messageId, message, isSender) {
                var messageClass = isSender ? "message-orange" : "message-blue";
                var messageContent = "<p class='" + messageClass + "'>" + senderName + ": " + message + "</p>";
                $("#container").append(messageContent);
          });
        *@
        connection.on("ReceiveMessage", function (senderName,receverId,messageId, message,timeStamp, isSender) {
                var messageClass = isSender ? "message-orange" : "message-blue";
                var messageContent = `
                    <div class='message ${messageClass}' data-message-id='${messageId}'>
                        <small>
                            ${senderName}
                        </small>
                        <p class="message-content mt-2" style="font-size:18px;font-weight:bold">
                            ${message}
                        </p>
                        ${
                           (receverId == '@Model.User.Id') ? 
                            `<div class="row mt-2">
                                <div class="col-9">
                                    <small>${timeStamp}</small>
                                </div>
                            </div>`
                           :
                            `<div class="row mt-2">
                                <div class="col-9">
                                    <small>${timeStamp}</small>
                                </div>
                                <div class="col-3">
                                    <button class="bg-transparent border-0 delete-button" data-id="${messageId}">
                                        <i class="fa-solid fa-trash"></i>
                                    </button>
                                </div>
                            </div>`
                         }
                    </div>
                `;
                $("#container").append(messageContent);
          });




        //_______________________  Send Message _________________________
        //______ delete on both End ____
        connection.on("MessageDeleted", function (userId, deletedMessageId) {
            if (userId === "@Model.Recever.Id") {
                // Find the message element with the deletedMessageId and remove it from the DOM
                $("#container").find(".message[data-message-id='" + deletedMessageId + "']").remove();
            }
        });

        //______ invoke signalR method ____
        $(document).on("click", ".delete-button", function (event) {
            var messageId = $(this).attr("data-id");
            var mId = parseInt(messageId);

            if (confirm("Are you sure you want to delete this message?")) {
                connection.invoke("DeletePrivateChatMessage", mId)
                    .then(function () {
                        // Optional: You can remove the message from the UI immediately without waiting for the server response.
                        $("#container").find(".message[data-message-id='" + mId + "']").remove();

                        $("#messageInput").val(""); // Clear the input field after sending the message
                    })
                    .catch(function (error) {
                        console.error(error);
                    });
             }

         });



        //__________ Onload  Go to end of page ___________
        $(document).ready(function() {
            // Scroll to the end of the page
            $("html, body").animate({ scrollTop: $(document).height() }, "slow");

            // Rest of your code...

            // SignalR Connection and other code...
        });
    </script>
}